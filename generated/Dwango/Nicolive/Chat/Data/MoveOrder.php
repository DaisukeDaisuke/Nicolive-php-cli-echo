<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dwango/nicolive/chat/data/MoveOrder.proto

namespace Dwango\Nicolive\Chat\Data;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>dwango.nicolive.chat.data.MoveOrder</code>
 */
class MoveOrder extends \Google\Protobuf\Internal\Message
{
    protected $to;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Dwango\Nicolive\Chat\Data\Jump $jump
     *     @type \Dwango\Nicolive\Chat\Data\Redirect $redirect
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Dwango\Nicolive\Chat\Data\MoveOrder::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.dwango.nicolive.chat.data.Jump jump = 1;</code>
     * @return \Dwango\Nicolive\Chat\Data\Jump
     */
    public function getJump()
    {
        return $this->readOneof(1);
    }

    /**
     * Generated from protobuf field <code>.dwango.nicolive.chat.data.Jump jump = 1;</code>
     * @param \Dwango\Nicolive\Chat\Data\Jump $var
     * @return $this
     */
    public function setJump($var)
    {
        GPBUtil::checkMessage($var, \Dwango\Nicolive\Chat\Data\Jump::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.dwango.nicolive.chat.data.Redirect redirect = 2;</code>
     * @return \Dwango\Nicolive\Chat\Data\Redirect
     */
    public function getRedirect()
    {
        return $this->readOneof(2);
    }

    /**
     * Generated from protobuf field <code>.dwango.nicolive.chat.data.Redirect redirect = 2;</code>
     * @param \Dwango\Nicolive\Chat\Data\Redirect $var
     * @return $this
     */
    public function setRedirect($var)
    {
        GPBUtil::checkMessage($var, \Dwango\Nicolive\Chat\Data\Redirect::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getTo()
    {
        return $this->whichOneof("to");
    }

}

