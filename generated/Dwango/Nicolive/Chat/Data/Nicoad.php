<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dwango/nicolive/chat/data/Nicoad.proto

namespace Dwango\Nicolive\Chat\Data;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>dwango.nicolive.chat.data.Nicoad</code>
 */
class Nicoad extends \Google\Protobuf\Internal\Message
{
    protected $versions;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Dwango\Nicolive\Chat\Data\Nicoad\V0 $v0
     *     @type \Dwango\Nicolive\Chat\Data\Nicoad\V1 $v1
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Dwango\Nicolive\Chat\Data\Nicoad::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.dwango.nicolive.chat.data.Nicoad.V0 v0 = 1;</code>
     * @return \Dwango\Nicolive\Chat\Data\Nicoad\V0
     */
    public function getV0()
    {
        return $this->readOneof(1);
    }

    /**
     * Generated from protobuf field <code>.dwango.nicolive.chat.data.Nicoad.V0 v0 = 1;</code>
     * @param \Dwango\Nicolive\Chat\Data\Nicoad\V0 $var
     * @return $this
     */
    public function setV0($var)
    {
        GPBUtil::checkMessage($var, \Dwango\Nicolive\Chat\Data\Nicoad_V0::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.dwango.nicolive.chat.data.Nicoad.V1 v1 = 2;</code>
     * @return \Dwango\Nicolive\Chat\Data\Nicoad\V1
     */
    public function getV1()
    {
        return $this->readOneof(2);
    }

    /**
     * Generated from protobuf field <code>.dwango.nicolive.chat.data.Nicoad.V1 v1 = 2;</code>
     * @param \Dwango\Nicolive\Chat\Data\Nicoad\V1 $var
     * @return $this
     */
    public function setV1($var)
    {
        GPBUtil::checkMessage($var, \Dwango\Nicolive\Chat\Data\Nicoad_V1::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getVersions()
    {
        return $this->whichOneof("versions");
    }

}

